akka {
  loglevel = DEBUG
  stdout-loglevel = ERROR
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  actor {
    default-dispatcher {
      throughput = 10000

      fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 0.5
      }
    }
  }
}

spray {
  can {
    server {
      server-header = "TomTom Navcloud App Server (spray-can 1.0)"
    }
  }

  client {
    # the maximum number of parallel connections that an HttpConduit
    # is allowed to establish to a host, must be greater than zero
    max-connections = 12
  }

  io {
    # the number of threads to spread connection management across
    # 1     = the root IOBridge manages all sockets itself (a good default for most applications)
    # n > 1 = the root IOBridge only handles ServerSockets for accepting new connections,
    #         mgmt. of the connection sockets themselves is spread equally across n sub-bridges
    parallelism = 2

    # the size of the buffer to allocate (anew!) for every read from a socket
    read-buffer-size = 4k

    tcp {
      # value for the SO_RCVBUF option for the created TCP sockets,
      # set to zero to not explicitly set a value but use the default
      receive-buffer-size = 0

      # value for the SO_SNDBUF option for the created TCP sockets,
      # set to zero to not explicitly set a value but use the default
      send-buffer-size = 0

      # indicates whether SO_KEEPALIVE should be set for the created TCP sockets,
      # 0 -> default, 1 -> true, -1 -> false
      keep-alive = 1

      # indicates whether TCP_NODELAY should be set for the created TCP sockets,
      # 0 -> default, 1 -> disable Nagle's algorithm, -1 -> enable Nagle's algorithm
      no-delay = 1
    }
  }
}

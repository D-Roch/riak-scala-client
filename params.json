{"name":"Riak Scala Client","tagline":"A fast, non-blocking Scala Riak client library based on Akka and Spray","body":"\r\nA fast, non-blocking idiomatic Scala client library for interacting with Riak.\r\n\r\n\r\n## Current Status\r\n\r\n***Preparing for a first public release***\r\n\r\nThis project is very new and still under heavy construction. The aim is to support\r\nmost, if not all, features exposed by the Riak HTTP API.\r\n\r\nA first public release to the Sonatype/Central repositories is scheduled for mid-March 2013.\r\n\r\nSo far, the following Riak API features are supported:\r\n\r\n- Fetch\r\n- Store\r\n- Delete\r\n- Customizable and strongly typed conflict resolution on all fetches (and Stores when returnbody=true)\r\n- Automatic conversion between raw RiakValues and Scala (case) classes using type classes\r\n- A RiakMeta[T] box type for retaining the riak meta data (like the vclock, the etag, the last modified date, the indexes, etc.) after conversion to Scala (case) classes.\r\n- Secondary Indexes (2i): exact matches\r\n- Secondary Indexes (2i): ranges\r\n- auto-retry (a standard feature of the underlying spray-client library)\r\n\r\nThese Riak features are currently missing and/or under construction:\r\n\r\n- link walking\r\n- Map Reduce\r\n\r\n\r\n## Design goals\r\n\r\n- It should provide an idiomatic Scala client API\r\n- It should be non-blocking (i.e. all calls are handled asynchronously and result in Futures)\r\n- Easy Integration with Akka\r\n\r\nThe initial focus will be on supporting the Riak HTTP API. Protobuf support might be added\r\nlater but it has a low priority at the moment.\r\n\r\n\r\n## Design and Implementation\r\n\r\nThe _riak-scala-client_ is based on [Akka] 2.1 and and [Spray] client 1.1.\r\n\r\nThe client is implemented as an Akka extension, making it very easy to use\r\nfrom Akka-based applications and non-Akka applications alike.\r\n\r\n\r\n## Why such a boring name?\r\n\r\nIt seems all the cool names (scalariak, riakka, riaktor, etc.) have been taken already.\r\nIf you come up with a cooler name, please let us know and eternal fame will be yours!\r\n\r\n\r\n## License\r\n\r\nThe _riak-scala-client_ is licensed under [APL 2.0].\r\n\r\n\r\n  [Akka]:    http://akka.io/\r\n  [Spray]:    http://spray.io/\r\n  [APL 2.0]: http://www.apache.org/licenses/LICENSE-2.0\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}